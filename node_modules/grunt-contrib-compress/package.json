{
  "name": "grunt-contrib-compress",
  "description": "Compress files and folders",
  "version": "1.3.0",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "gruntjs/grunt-contrib-compress"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "tasks/compress.js",
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "archiver": "^1.0.0",
    "chalk": "^1.1.1",
    "lodash": "^4.7.0",
    "pretty-bytes": "^3.0.1",
    "stream-buffers": "^2.1.0"
  },
  "devDependencies": {
    "grunt": "^1.0.0",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-internal": "^1.1.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-nodeunit": "^1.0.0",
    "tar": "^2.2.1",
    "unzip": "^0.1.5"
  },
  "keywords": [
    "gruntplugin",
    "compress",
    "zip",
    "tar"
  ],
  "files": [
    "tasks"
  ],
  "appveyor_id": "tiwbi1smm1j8aa5j",
  "readme": "# grunt-contrib-compress v1.3.0 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-compress.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-compress) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/tiwbi1smm1j8aa5j/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-compress/branch/master)\n\n> Compress files and folders\n\n\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-compress --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-compress');\n```\n\n*This plugin was designed to work with Grunt >= 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/gruntjs/grunt-contrib-compress/tree/grunt-0.3-stable).*\n\n\n\n## Compress task\n_Run this task with the `grunt compress` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\nNode Libraries Used:\n[archiver](https://github.com/ctalkington/node-archiver) (for zip/tar)\n[zlib](http://nodejs.org/api/zlib.html#zlib_options) (for gzip).\n### Options\n\n#### archive\nType: `String` or `Function`  \nModes: `zip` `tar`\n\nThis is used to define where to output the archive. Each target can only have one output file.\nIf the type is a Function it must return a String.\n\n*This option is only appropriate for many-files-to-one compression modes like zip and tar.  For gzip for example, please use grunt's standard src/dest specifications.*\n\n#### mode\nType: `String`\n\nThis is used to define which mode to use, currently supports `gzip`, `deflate`, `deflateRaw`, `tar`, `tgz` (tar gzip) and `zip`.\n\nAutomatically detected per `dest:src` pair, but can be overridden per target if desired.\n\n#### level\nType: `Integer`  \nModes: `zip` `gzip`  \nDefault: `1`\n\nSets the level of archive compression.\n\n#### pretty\nType: `Boolean`  \nDefault: `false`\n\nPretty print file sizes when logging.\n\n### File Data\n\nThe following additional keys may be passed as part of a dest:src pair when using an Archiver-backed format.\nAll keys can be defined as a `Function` that receives the file name and returns in the type specified below.\n\n#### date\nType: `Date`  \nModes: `zip` `tar` `tgz`\n\nSets the file date.\n\n#### mode\nType: `Integer`  \nModes: `zip` `tar` `tgz`\n\nSets the file permissions.\n\n#### store\nType: `Boolean`  \nDefault: `false`\n\nIf true, file contents will be archived without compression.\n\n#### comment\nType: `String`  \nModes: `zip`\n\nSets the file comment.\n\n#### gid\nType: `Integer`\nModes: `tar` `tgz`\n\nSets the group of the file in the archive\n\n#### uid\nType: `Integer`\nModes: `tar` `tgz`\n\nSets the user of the file in the archive\n\n### Usage Examples\n\n```js\n// make a zipfile\ncompress: {\n  main: {\n    options: {\n      archive: 'archive.zip'\n    },\n    files: [\n      {src: ['path/*'], dest: 'internal_folder/', filter: 'isFile'}, // includes files in path\n      {src: ['path/**'], dest: 'internal_folder2/'}, // includes files in path and its subdirs\n      {expand: true, cwd: 'path/', src: ['**'], dest: 'internal_folder3/'}, // makes all src relative to cwd\n      {flatten: true, src: ['path/**'], dest: 'internal_folder4/', filter: 'isFile'} // flattens results to a single level\n    ]\n  }\n}\n```\n\n```js\n// gzip assets 1-to-1 for production\ncompress: {\n  main: {\n    options: {\n      mode: 'gzip'\n    },\n    expand: true,\n    cwd: 'assets/',\n    src: ['**/*'],\n    dest: 'public/'\n  }\n}\n```\n\n```js\n// compress a file to a different location than its source\n// example compresses path/the_file to /the_file inside archive.zip\ncompress: {\n  main: {\n    options: {\n      archive: 'archive.zip'\n    },\n  files: [\n    {expand: true, cwd: 'path/', src: ['the_file'], dest: '/'}\n    ]\n  }\n},\n```\n\n```js\n// use custom extension for the output file\ncompress: {\n  main: {\n    options: {\n      mode: 'gzip'\n    },\n    files: [\n      // Each of the files in the src/ folder will be output to\n      // the dist/ folder each with the extension .gz.js\n      {expand: true, src: ['src/*.js'], dest: 'dist/', ext: '.gz.js'}\n    ]\n  }\n}\n\n```\n```js\n// use a function to return the output file\ncompress: {\n  main: {\n    options: {\n      archive: function () {\n        // The global value git.tag is set by another task\n        return git.tag + '.zip'\n      }\n    },\n    files: [\n      {expand: true, src: ['src/*.js'], dest: 'dist/'}\n    ]\n  }\n}\n```\n\n\n\n\n## Release History\n\n * 2016-05-24   v1.3.0   Update to Archiver 1.0. Fix node 6 support.\n * 2016-03-24   v1.2.0   Dependency update.\n * 2016-03-08   v1.1.1   Fix verbose output.\n * 2016-03-04   v1.1.0   Add ability to replace file in the same location.\n * 2016-02-15   v1.0.0   Update archiver, chalk and pretty-bytes.\n * 2015-10-23   v0.14.0   Change to verbose output. Dependency updates archiver 0.16.\n * 2014-12-25   v0.13.0   Update archiver to v0.13. Small fixes.\n * 2014-09-23   v0.12.0   Output update. Prevent zipping dot files and allow for forcing through `fail.warn` within loop.\n * 2014-08-26   v0.11.0   Update archiver to v0.11.0.\n * 2014-07-14   v0.10.0   Don't apply extensions automatically (use `ext` or `rename`).\n * 2014-05-20   v0.9.1   Allow directories to pass-through to archiver via filter.\n * 2014-05-20   v0.9.0   Update archiver to v0.9.0.\n * 2014-04-09   v0.8.0   Update archiver to v0.8.0.\n * 2014-02-17   v0.7.0   Update archiver to v0.6.0.\n * 2014-01-12   v0.6.0   Update archiver to v0.5.0.\n * 2013-11-27   v0.5.3   Allow archive option to be a function.\n * 2013-06-03   v0.5.2   Allow custom extensions using the `ext` option.\n * 2013-05-28   v0.5.1   Avoid gzip on folders.\n * 2013-04-23   v0.5.0   Add support for `deflate` and `deflateRaw`.\n * 2013-04-15   v0.4.10   Fix issue where task finished before all data was compressed.\n * 2013-04-09   v0.4.9   Bump Archiver version.\n * 2013-04-07   v0.4.8   Open streams lazily to avoid too many open files.\n * 2013-04-01   v0.4.7   Pipe gzip to fix gzip issues. Add tests that undo compressed files to test.\n * 2013-03-25   v0.4.6   Fix Node.js v0.8 compatibility issue with gzip.\n * 2013-03-20   v0.4.5   Update to archiver 0.4.1 Fix issue with gzip failing intermittently.\n * 2013-03-19   v0.4.4   Fixes for Node.js v0.10. Explicitly call `grunt.file` methods with `map` and `filter`.\n * 2013-03-14   v0.4.3   Fix for gzip; continue iteration on returning early.\n * 2013-03-13   v0.4.2   Refactor task like other contrib tasks. Fix gzip of multiple files. Remove unused dependencies.\n * 2013-02-22   v0.4.1   Pretty print compressed sizes. Logging each addition to a compressed file now only happens in verbose mode.\n * 2013-02-15   v0.4.0   First official release for Grunt 0.4.0.\n * 2013-01-23   v0.4.0rc7   Updating grunt/gruntplugin dependencies to rc7. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-14   v0.4.0rc5   Updating to work with grunt v0.4.0rc5. Conversion to grunt v0.4 conventions. Replace `basePath` with `cwd`.\n * 2012-10-12   v0.3.2   Rename grunt-contrib-lib dep to grunt-lib-contrib.\n * 2012-10-09   v0.3.1   Replace zipstream package with archiver.\n * 2012-09-24   v0.3.0   General cleanup. Options no longer accepted from global config key.\n * 2012-09-18   v0.2.2   Test refactoring. No valid source check. Automatic mode detection.\n * 2012-09-10   v0.2.0   Refactored from grunt-contrib into individual repo.\n\n---\n\nTask submitted by [Chris Talkington](http://christalkington.com/)\n\n*This file was generated on Tue May 24 2016 13:48:49.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-compress@1.3.0",
  "dist": {
    "shasum": "fc9c54209890764a0ebb529c0a21cf79919aa3c9"
  },
  "_from": "grunt-contrib-compress@",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-compress/-/grunt-contrib-compress-1.3.0.tgz"
}
